---
import BasicLayout from '../layout/BasicLayout.astro';
import Card from '../layout/Card.astro';

const responseData = await fetch('https://randomuser.me/api/?results=11');
const users = await responseData.json();
---

<BasicLayout title="Home">
    <a href="https://Alexouuuuuuuuuuu.github.io/projet2/" class="text-3xl font-bold hover:text-blue-600 underline">
        <h1>
            Alexisite
        </h1>
    </a>

        <h2 class="text-5xl text-shadow-red-600 font-bold font-minecraft mt-8 ">Personnage</h2>
        <div class="w-full select-none max-w-full overflow-x-auto whitespace-nowrap py-4" style="cursor: grab;" id="infinite-scroll-container">
            <ul class="flex flex-row gap-6 mt-8 selection-none" id="users-list">
                {users.results.map((user: any) => (
                    <li class="inline-block ">
                        <Card user={user} />
                    </li>
                ))}
            </ul>
        </div>
        <div class="w-full select-none max-w-full overflow-x-auto whitespace-nowrap py-4" style="cursor: grab;" id="infinite-scroll-container-2">
            <ul class="flex flex-row gap-6 mt-8 selection-none" id="users-list-2">
            {users.results.map((user: any) => (
                <li class="inline-block ">
                <Card user={user} />
                </li>
            ))}
            </ul>
        </div>
        <style>
            #infinite-scroll-container,
            #infinite-scroll-container-2 {
                scrollbar-width: none; /* Firefox */
                -ms-overflow-style: none; /* IE and Edge */
            }

        </style>
        <script type="module">
            // Première ligne (vers la droite)
            const container1 = document.getElementById('infinite-scroll-container');
            const ul1 = document.getElementById('users-list');
            let usersData1 = [...ul1.children];

            // Deuxième ligne (vers la gauche)
            const container2 = document.getElementById('infinite-scroll-container-2');
            const ul2 = document.getElementById('users-list-2');
            let usersData2 = [...ul2.children];

            // Infinite scroll pour la première ligne
            container1.addEventListener('scroll', function() {
            if (container1.scrollLeft + container1.clientWidth >= container1.scrollWidth - 10) {
                usersData1.forEach(node => {
                ul1.appendChild(node.cloneNode(true));
                });
            }
            });

            // Infinite scroll pour la deuxième ligne
            container2.addEventListener('scroll', function() {
            if (container2.scrollLeft <= 10) {
                // Ajoute à gauche
                usersData2.slice().reverse().forEach(node => {
                ul2.insertBefore(node.cloneNode(true), ul2.firstChild);
                // Décale le scroll pour ne pas "sauter"
                container2.scrollLeft += node.offsetWidth + 24; // 24 = gap-6
                });
            }
            });

            // Auto-scroll première ligne (droite)
            let autoScrollSpeed1 = 2;
            let autoScrollActive1 = true;
            function autoScroll1() {
            if (!autoScrollActive1) return;
            if (container1.scrollLeft + container1.clientWidth >= container1.scrollWidth - 10) {
                usersData1.forEach(node => {
                ul1.appendChild(node.cloneNode(true));
                });
            }
            container1.scrollLeft += autoScrollSpeed1;
            requestAnimationFrame(autoScroll1);
            }
            requestAnimationFrame(autoScroll1);

            // Auto-scroll deuxième ligne (gauche)
            let autoScrollSpeed2 = 2;
            let autoScrollActive2 = true;
            // Place le scroll tout à droite au départ
            container2.scrollLeft = container2.scrollWidth;
            function autoScroll2() {
            if (!autoScrollActive2) return;
            if (container2.scrollLeft <= 10) {
                usersData2.slice().reverse().forEach(node => {
                ul2.insertBefore(node.cloneNode(true), ul2.firstChild);
                container2.scrollLeft += node.offsetWidth + 24;
                });
            }
            container2.scrollLeft -= autoScrollSpeed2;
            requestAnimationFrame(autoScroll2);
            }
            requestAnimationFrame(autoScroll2);
        </script>

        <style>
@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');
.font-minecraft {
    font-family: 'Press Start 2P', monospace;
    font-size: 50px;
    letter-spacing: 1px;
}
.shadow-pixel {
    box-shadow: 4px 4px 0 0 #222;
}
.pixel-avatar {
    image-rendering: pixelated;
}
.pixel-card {
    border-radius: 0;
}
</style>


    <!-- <div class="w-full overflow-x-auto whitespace-nowrap py-4" id="infinite-scroll-container" style="cursor: grab;">
        <ul class="flex items-center gap-8" id="users-list">
            {users.results.map((user) => (
                <li class="inline-block">
                    <Card user={user} />
                </li>
            ))}
        </ul>
    </div>
    <script type="module">
        let loading = false;
        let page = 1;
        const ul = document.getElementById('users-list');
        const container = document.getElementById('infinite-scroll-container');

        // Drag-to-scroll with mouse
        let isDown = false;
        let startX;
        let scrollLeft;

        container.addEventListener('mousedown', (e) => {
            isDown = true;
            container.classList.add('active');
            container.style.cursor = 'grabbing';
            startX = e.pageX - container.offsetLeft;
            scrollLeft = container.scrollLeft;
        });

        container.addEventListener('mouseleave', () => {
            isDown = false;
            container.classList.remove('active');
            container.style.cursor = 'grab';
        });

        container.addEventListener('mouseup', () => {
            isDown = false;
            container.classList.remove('active');
            container.style.cursor = 'grab';
        });

        container.addEventListener('mousemove', (e) => {
            if (!isDown) return;
            e.preventDefault();
            const x = e.pageX - container.offsetLeft;
            const walk = (x - startX) * 2; // scroll-fast
            container.scrollLeft = scrollLeft - walk;
        });

        async function loadMoreUsers() {
            if (loading) return;
            loading = true;
            page++;
            const res = await fetch(`https://randomuser.me/api/?results=8&page=${page}`);
            const data = await res.json();
            data.results.forEach(user => {
                const li = document.createElement('li');
                li.className = "inline-block";
                // Utilise le même style que la carte Astro
                li.innerHTML = `
                    <div class="bg-white rounded-lg shadow-md p-4 flex flex-col items-center">
                        <img src="${user.picture.medium}" alt="${user.name.first} ${user.name.last}" class="rounded-full mb-2" />
                        <div class="font-bold">${user.name.first} ${user.name.last}</div>
                        <div class="text-sm text-gray-500">${user.email}</div>
                    </div>
                `;
                ul.appendChild(li);
            });
            loading = false;
        }

        container.addEventListener('scroll', function() {
            if (this.scrollLeft + this.clientWidth >= this.scrollWidth - 10) {
                loadMoreUsers();
            }
        });
    </script> -->
</BasicLayout>

